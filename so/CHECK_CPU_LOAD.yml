---
- name: Verificar carga da CPU com fallback
  hosts: all
  gather_facts: true
  vars:
    load_threshold: 2.00

  tasks:

    - name: Tentar obter load_average dos facts
      set_fact:
        load_average: "{{ ansible_facts.ansible_loadavg['1m'] | float }}"
      when: ansible_facts.ansible_loadavg is defined

    - name: Fallback - obter load average via shell caso fato não esteja disponível
      when: ansible_facts.ansible_loadavg is not defined
      block:
        - name: Executar uptime
          ansible.builtin.shell: uptime
          register: uptime_output
          changed_when: false

        - name: Extrair valor do load average de 1 minuto
          set_fact:
            load_average: "{{ uptime_output.stdout | regex_search('load average: ([0-9\\.]+)', '\\1') | float }}"

    - name: Comparar carga com limite
      set_fact:
        cpu_status: "{{ 'OK' if load_average < load_threshold else 'NOK' }}"
        cpu_message: >-
          {% if load_average < load_threshold %}
            Load abaixo do limite ({{ load_average }} < {{ load_threshold }})
          {% else %}
            Load acima do limite ({{ load_average }} >= {{ load_threshold }})
          {% endif %}

    - name: Exibir resultado
      debug:
        msg: "Status: {{ cpu_status }} | Mensagem: {{ cpu_message }}"
